// 크기 구하기
 CRect rect;
 GetClientRect( &rect );
 // 화면 그리기 CDC dcTemp;
 dcTemp.CreateCompatibleDC( &dc );
 HBITMAP hbmp = ::CreateCompatibleBitmap( dc, 10000, rect.Height() - 20 );
 // 가로 10000 크기로 생성 
HBITMAP hbmpOld = (HBITMAP)dcTemp.SelectObject( hbmp ); 
// 100마다 텍스트 출력
 dcTemp.PatBlt( 0, 0, 10000, rect.Height(), WHITENESS ); 
for ( int iX = 0 ; iX < 10000 ; iX += 100 ) 
{
 CString sX; 
sX.Format( _T( "%d" ), iX ); 
dcTemp.TextOut( iX, (rect.Height() / 2), sX ); 
} 
SCROLLINFO scrInfo;
 int iSrcX = 0; 
if ( NULL == m_ctlHScroll.GetSafeHwnd() )
 {
 CRect rectHScroll; 
rectHScroll.SetRect( rect.left, rect.top, rect.right, rect.bottom );
 m_ctlHScroll.Create( WS_CHILD | WS_VISIBLE | SBS_HORZ | SBS_BOTTOMALIGN , rectHScroll , this  , 0);
 m_ctlHScroll.ShowScrollBar( TRUE ); 
scrInfo.cbSize = sizeof( scrInfo ); 
scrInfo.fMask = SIF_ALL; 
scrInfo.nMin = 0;// 스크롤 최소값 
scrInfo.nMax = 10000; // 스크롤 최대값
 scrInfo.nPage = rect.Width(); // 페이지 번호 
scrInfo.nTrackPos = 0; // 드래깅 상태의 트랙바 위치
 scrInfo.nPos = 0; // 트랙바 위치 
m_ctlHScroll.SetScrollRange( scrInfo.nMin, scrInfo.nMax ); // 범위 설정
 m_ctlHScroll.SetScrollPos( scrInfo.nPos ); // 위치 설정
 m_ctlHScroll.SetScrollInfo( &scrInfo ); // 스크롤바 정보 설정 
} 
else
 {
 if ( FALSE != m_ctlHScroll.GetScrollInfo( &scrInfo ) )
 { 
iSrcX = scrInfo.nPos; // 현재 스크롤 위치 받아옴 
} 
} 
dc.BitBlt( 0, 0, rect.Width(), rect.Height(), &dcTemp, iSrcX, 0, SRCCOPY ); // 더블 버퍼링
 dcTemp.SelectObject( hbmpOld ); 
::DeleteObject( hbmp );
dcTemp.DeleteDC();

출처: https://3001ssw.tistory.com/117?category=939609
 [C++, WinAPI, Android, OpenCV 정리 블로그]